name: Build and Release

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Build executable
        run: pyinstaller --onefile --name translate-bot${{ matrix.os == 'windows-latest' && '.exe' || '' }} translate-bot.py

      - name: Prepare files for Linux and macOS
        if: matrix.os != 'windows-latest'
        run: |
          cp config.py dist/
          cd dist
          ls -la
          zip -r translate_bot_v${{ github.event.release.tag_name }}_${{ matrix.os == 'ubuntu-latest' && 'linux' || 'mac_os_x' }} *

      - name: Prepare files for Windows
        if: matrix.os == 'windows-latest'
        run: |
          Copy-Item config.py -Destination dist\
          cd dist
          Compress-Archive -Path * -DestinationPath translate_bot_v${{ github.event.release.tag_name }}_windows
        shell: pwsh

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: translate_bot_v${{ github.event.release.tag_name }}_${{ matrix.os == 'ubuntu-latest' && 'linux' || (matrix.os == 'windows-latest' && 'windows' || 'mac_os_x') }}
          path: dist/

  upload-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Compress all artifacts
        run: |
          cd artifacts
          zip -r translate_bot_v${{ github.event.release.tag_name }}.zip *

      - name: Upload artifacts to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./artifacts/translate_bot_v${{ github.event.release.tag_name }}.zip
          asset_name: translate_bot_v${{ github.event.release.tag_name }}.zip
          asset_content_type: application/zip
